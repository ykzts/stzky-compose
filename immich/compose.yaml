name: immich

services:
  alloy:
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - /etc/alloy/config.alloy
    container_name: immich_alloy
    environment:
      - ALLOY_PROMETHEUS_PASSWORD=${ALLOY_PROMETHEUS_PASSWORD}
      - ALLOY_PROMETHEUS_USERNAME=${ALLOY_PROMETHEUS_USERNAME}
    image: grafana/alloy:v1.8.3@sha256:ab04df3936e4d71d31b6f55e0c58a7e749091f59635dd8c2bc731ba1b6c93701
    restart: unless-stopped
    volumes:
      - /opt/immich/config/alloy:/etc/alloy

  database:
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    container_name: immich_postgres
    environment:
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
    healthcheck:
      interval: 5m
      start_interval: 30s
      start_period: 5m
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
    image: tensorchord/pgvecto-rs:pg16-v0.3.0@sha256:b89f8ddbb28400d428d3c5e3e860f578cde85ad8e78544a8b687b97937cfc50b
    restart: always
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data

  immich-machine-learning:
    container_name: immich_machine_learning
    device_cgroup_rules:
      - 'c 189:* rmw'
    devices:
      - /dev/dri:/dev/dri
    environment:
      - IMMICH_TELEMETRY_INCLUDE=all
    healthcheck:
      disable: false
    image: ghcr.io/immich-app/immich-machine-learning:v1.132.3-openvino@sha256:faf4208b1f49e3b943583f4546d9bc72e6101d6b97c1959db8212db84a49ad11
    restart: unless-stopped
    volumes:
      - /dev/bus/usb:/dev/bus/usb
      - model-cache:/cache

  immich-server:
    container_name: immich_server
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_DATABASE_NAME=${DB_DATABASE_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USERNAME=${DB_USERNAME}
      - IMMICH_TELEMETRY_INCLUDE=all
    healthcheck:
      disable: false
    image: ghcr.io/immich-app/immich-server:v1.132.3@sha256:6680d88486251b0264a78a1934fe82eef875555aa6d84d703a0980328a5d5c31
    ports:
      - '127.0.0.1:2283:2283'
    restart: always
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro

  redis:
    container_name: immich_redis
    healthcheck:
      test: redis-cli ping || exit 1
    image: valkey/valkey:8.1.1-bookworm@sha256:ff21bc0f8194dc9c105b769aeabf9585fea6a8ed649c0781caeac5cb3c247884
    restart: unless-stopped

volumes:
  model-cache:
